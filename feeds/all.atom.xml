<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Rajiv's Personal Blog</title><link href="http://blog.rajivabraham.com/" rel="alternate"></link><link href="http://blog.rajivabraham.com/feeds/all.atom.xml" rel="self"></link><id>http://blog.rajivabraham.com/</id><updated>2018-10-23T11:11:00-04:00</updated><entry><title>PureScript on AWS Lambda</title><link href="http://blog.rajivabraham.com/helloworld-purescript-awslambda.html" rel="alternate"></link><published>2018-10-23T11:11:00-04:00</published><updated>2018-10-23T11:11:00-04:00</updated><author><name>Rajiv Abraham</name></author><id>tag:blog.rajivabraham.com,2018-10-23:/helloworld-purescript-awslambda.html</id><summary type="html">&lt;p&gt;This post shows you how to run PureScript on AWS Lambda, using Express on the Serverless platform.&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Purpose&lt;/h2&gt;
&lt;p&gt;This post shows you how to run PureScript on AWS Lambda, using &lt;a href="https://expressjs.com/"&gt;Express&lt;/a&gt; on the &lt;a href="https://serverless.com/"&gt;Serverless&lt;/a&gt; platform. &lt;/p&gt;
&lt;h3&gt;Setup&lt;/h3&gt;
&lt;p&gt;The final output of this article is also a &lt;a href="https://github.com/RAbraham/hello-purescript-serverless"&gt;repo&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Prerequisites.&lt;/h4&gt;
&lt;p&gt;You should have &lt;code&gt;nodejs&lt;/code&gt; (i.e. &lt;code&gt;nvm&lt;/code&gt;, &lt;code&gt;npm&lt;/code&gt;) setup on your machine, preferably 8.10. AWS Lambda uses 8.10. I'm new to &lt;code&gt;nodejs&lt;/code&gt; land but I'm guessing that higher minor versions should be ok.&lt;/p&gt;
&lt;h4&gt;Software Setup&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;npm install -g purescript
npm install -g pulp bower
npm install -g serverless
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;AWS Credentials&lt;/h4&gt;
&lt;p&gt;If you haven't already, generate an AWS key and secret. This user must have &lt;code&gt;AdministratorAccess&lt;/code&gt; permissions. Here are the &lt;a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html#Using_CreateAccessKey_CLIAPI"&gt;docs&lt;/a&gt; or a slightly outdated &lt;a href="https://www.youtube.com/watch?v=HSd9uYj2LJA"&gt;video&lt;/a&gt;. For the video, follow on to 1:40 and ignore the Serverless Dashboard instructions(around 0:58 to 1:00), we are going to do that on the command line.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;serverless config credentials --provider aws --key your-aws-key --secret your-aws-secret
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Project Setup&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir hello-purescript-serverless
&lt;span class="nb"&gt;cd&lt;/span&gt; hello-purescript-serverless
npm init &lt;span class="c1"&gt;# fill in as directed&lt;/span&gt;
pulp init
pulp build
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If all goes well, you should see something like below:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;* Building project in /Users/rabraham/Documents/dev/purescript/hello-purescript-serverless
Compiling Data.Symbol
Compiling Type.Data.RowList
...
Compiling Main
Compiling PSCI.Support
Compiling Effect.Class.Console
* Build successful.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now let's install our project specific packages.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;bower install --save purescript-aws-lambda-express purescript-express
npm install --save aws-serverless-express express
npm install serverless-offline --save-dev
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;purescript-express&lt;/code&gt; is a wrapper on &lt;code&gt;express&lt;/code&gt; while &lt;code&gt;purescript-aws-lambda-express&lt;/code&gt; provides the wrapper for AWS Lambda.
&lt;code&gt;serverless-offline&lt;/code&gt; allows us to test the code locally before deploying it to AWS Lambda.&lt;/p&gt;
&lt;p&gt;At time of writing, &lt;code&gt;purescript-express&lt;/code&gt; has an issue where we have to install the following two packages too. Try a &lt;code&gt;pulp build&lt;/code&gt; right now and if that fails, run the following commands&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;bower install --save purescript-test-unit
bower install --save purescript-aff
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Let's build it&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pulp build
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You should see some warnings but at the end, you should see &lt;code&gt;* Build successful.&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;Main Course&lt;/h3&gt;
&lt;p&gt;In your &lt;code&gt;src/Main.purs&lt;/code&gt;, delete the previous code and paste the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt; &lt;span class="n"&gt;Main&lt;/span&gt; &lt;span class="n"&gt;where&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;Node.Express.App&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;App&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;Node.Express.Handler&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Handler&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;Node.Express.Response&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sendJson&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;Network.AWS.Lambda.Express&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;Lambda&lt;/span&gt;

&lt;span class="o"&gt;--&lt;/span&gt; &lt;span class="n"&gt;Define&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;Express&lt;/span&gt; &lt;span class="n"&gt;web&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;

&lt;span class="n"&gt;indexHandler&lt;/span&gt; &lt;span class="p"&gt;::&lt;/span&gt; &lt;span class="n"&gt;Handler&lt;/span&gt;
&lt;span class="n"&gt;indexHandler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;sendJson&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ok&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="p"&gt;::&lt;/span&gt; &lt;span class="n"&gt;App&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;indexHandler&lt;/span&gt;

&lt;span class="o"&gt;--&lt;/span&gt; &lt;span class="n"&gt;Define&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;AWS&lt;/span&gt; &lt;span class="n"&gt;Lambda&lt;/span&gt; &lt;span class="n"&gt;handler&lt;/span&gt;

&lt;span class="n"&gt;handler&lt;/span&gt; &lt;span class="p"&gt;::&lt;/span&gt; &lt;span class="n"&gt;Lambda&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HttpHandler&lt;/span&gt;
&lt;span class="n"&gt;handler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
  &lt;span class="n"&gt;Lambda&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;makeHandler&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Build Your App&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pulp build
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Serverless Setup&lt;/h4&gt;
&lt;p&gt;In the root of your project, create the file &lt;code&gt;serverless.yml&lt;/code&gt; and paste the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;service&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;purescript-aws-lambda-express-test&lt;/span&gt;

&lt;span class="l l-Scalar l-Scalar-Plain"&gt;provider&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;aws&lt;/span&gt;
  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;runtime&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;nodejs8.10&lt;/span&gt;
  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;memorySize&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;128&lt;/span&gt;
  &lt;span class="c1"&gt;# stage: ${opt:stage dev}&lt;/span&gt;
  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;region&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;us-east-1&lt;/span&gt;

&lt;span class="l l-Scalar l-Scalar-Plain"&gt;functions&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;lambda&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="l l-Scalar l-Scalar-Plain"&gt;handler&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;output/Main/index.handler&lt;/span&gt;
    &lt;span class="l l-Scalar l-Scalar-Plain"&gt;events&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
      &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;http&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
          &lt;span class="l l-Scalar l-Scalar-Plain"&gt;path&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;/&lt;/span&gt; &lt;span class="c1"&gt;# this matches the base path&lt;/span&gt;
          &lt;span class="l l-Scalar l-Scalar-Plain"&gt;method&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;ANY&lt;/span&gt;
      &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;http&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
          &lt;span class="l l-Scalar l-Scalar-Plain"&gt;path&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;/{any+}&lt;/span&gt;
          &lt;span class="l l-Scalar l-Scalar-Plain"&gt;method&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;ANY&lt;/span&gt;

&lt;span class="l l-Scalar l-Scalar-Plain"&gt;plugins&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;serverless-offline&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Let's test this locally:
On one terminal.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;serverless offline start
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Open another terminal and do:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl http://localhost:3000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You should see &lt;code&gt;{"status":"ok"}&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;Deploy&lt;/h4&gt;
&lt;p&gt;Once it works locally, let's deploy to AWS.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;serverless deploy -v
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Output should look like something below. Note, your endpoint will be different:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Serverless: Packaging service
...
Service Information
service: purescript-aws-lambda-express-test
stage: dev
region: us-east-1
...
Stack Outputs
...
ServiceEndpoint: https://l4qajv7v95.execute-api.us-east-1.amazonaws.com/dev
....
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Copy the link shown as &lt;code&gt;ServiceEndpoint&lt;/code&gt; and you know what to do!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl https://l4qajv7v95.execute-api.us-east-1.amazonaws.com/dev
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;status&amp;quot;&lt;/span&gt;:&lt;span class="s2"&gt;&amp;quot;ok&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;%
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Undeploy&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;serverless remove -v
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I hope this enables you to make PureScript web applications! Thanks to &lt;a href="https://github.com/nkly/purescript-express"&gt;purescript-express&lt;/a&gt; and &lt;a href="https://github.com/lpil/purescript-aws-lambda-express"&gt;purescript-aws-lambda-express&lt;/a&gt; for making this possible.&lt;/p&gt;</content><category term="purescript"></category><category term="aws-lambda"></category><category term="express"></category><category term="serverless"></category></entry></feed>